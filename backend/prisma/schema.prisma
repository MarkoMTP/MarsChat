// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  username       String          @unique
  password       String
  bio            String?
  profilePicUrl  String?
  createdAt      DateTime        @default(now())
  messages       Message[]       @relation("UserMessages")
  inboxes        InboxMember[]
  reads          MessageRead[]
}

model Inbox {
  id          String         @id @default(uuid())
  isGroup     Boolean        @default(false)
  name        String?
  createdAt   DateTime       @default(now())
  lastMsgAt   DateTime?
  members     InboxMember[]
  messages    Message[]
}

model InboxMember {
  id       String   @id @default(uuid())
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  inbox    Inbox    @relation(fields: [inboxId], references: [id])
  inboxId  String
}

model Message {
  id         String         @id @default(uuid())
  content    String?
  mediaUrl   String?
  createdAt  DateTime       @default(now())
  sender     User           @relation("UserMessages", fields: [senderId], references: [id])
  senderId   String
  inbox      Inbox          @relation(fields: [inboxId], references: [id])
  inboxId    String
  reads      MessageRead[]
}

model MessageRead {
  id        String   @id @default(uuid())
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  readAt    DateTime @default(now())
}
